// <auto-generated />
using System;
using LocadoraDeVeiculos.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocadoraDeVeiculos.Infra.Context.Migrations
{
    [DbContext(typeof(LocacaoContext))]
    [Migration("20211007185628_vai_dar_certo")]
    partial class vai_dar_certo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClienteBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ClienteBase");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.DescontoModule.Desconto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdParceiro")
                        .HasColumnType("int");

                    b.Property<string>("Meio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Usos")
                        .HasColumnType("int");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("Descontos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.FuncionarioModule.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CpfFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.GrupoVeiculoModule.GrupoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("LimitePControlado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorDiarioPControlado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorDiarioPDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorDiarioPLivre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorKmRodadoPControlado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorKmRodadoPDiario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("GruposVeiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("CondutorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRetorno")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DescontoId")
                        .HasColumnType("int");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdCondutor")
                        .HasColumnType("int");

                    b.Property<int>("IdDesconto")
                        .HasColumnType("int");

                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecoCombustivel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecoPlano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecoServicos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StatusLocacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("int");

                    b.Property<string>("TipoLocacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondutorId");

                    b.HasIndex("DescontoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parceiros");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ServicoModule.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoCalculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocacaoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.TaxaDaLocacaoModule.TaxaDaLocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdLocacao")
                        .HasColumnType("int");

                    b.Property<int?>("IdTaxa")
                        .HasColumnType("int");

                    b.Property<int?>("LocacaoEscolhidaId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocacaoEscolhidaId");

                    b.HasIndex("ServicoId");

                    b.ToTable("TaxasDaLocacao");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<int?>("CapacidadePessoas")
                        .HasColumnType("int");

                    b.Property<int?>("CapacidadeTanque")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisponibilidadeVeiculo")
                        .HasColumnType("int");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("GrupoVeiculoId")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupoVeiculo")
                        .HasColumnType("int");

                    b.Property<int?>("KmInicial")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroChassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPlaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroPortas")
                        .HasColumnType("int");

                    b.Property<string>("TamanhoPortaMalas")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TipoCombustivel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoVeiculoId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCNPJModule.ClienteCNPJ", b =>
                {
                    b.HasBaseType("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteBase");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ClienteCNPJ");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCPFModule.ClienteCPF", b =>
                {
                    b.HasBaseType("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteBase");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Cnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ClienteId");

                    b.HasDiscriminator().HasValue("ClienteCPF");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.DescontoModule.Desconto", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", "Parceiro")
                        .WithMany("Descontos")
                        .HasForeignKey("ParceiroId");

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteBase", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCPFModule.ClienteCPF", "Condutor")
                        .WithMany("Locacoes")
                        .HasForeignKey("CondutorId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.DescontoModule.Desconto", "Desconto")
                        .WithMany()
                        .HasForeignKey("DescontoId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", "Veiculo")
                        .WithMany("Locacoes")
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Cliente");

                    b.Navigation("Condutor");

                    b.Navigation("Desconto");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ServicoModule.Servico", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", null)
                        .WithMany("Servicos")
                        .HasForeignKey("LocacaoId");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.TaxaDaLocacaoModule.TaxaDaLocacao", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", "LocacaoEscolhida")
                        .WithMany("TaxasDaLocacao")
                        .HasForeignKey("LocacaoEscolhidaId");

                    b.HasOne("LocadoraDeVeiculos.Dominio.ServicoModule.Servico", "Servico")
                        .WithMany("TaxasDaLocacao")
                        .HasForeignKey("ServicoId");

                    b.Navigation("LocacaoEscolhida");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.GrupoVeiculoModule.GrupoVeiculo", "GrupoVeiculo")
                        .WithMany("Veiculos")
                        .HasForeignKey("GrupoVeiculoId");

                    b.Navigation("GrupoVeiculo");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCPFModule.ClienteCPF", b =>
                {
                    b.HasOne("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCNPJModule.ClienteCNPJ", "Cliente")
                        .WithMany("Condutores")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.GrupoVeiculoModule.GrupoVeiculo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.Navigation("Servicos");

                    b.Navigation("TaxasDaLocacao");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ParceiroModule.Parceiro", b =>
                {
                    b.Navigation("Descontos");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ServicoModule.Servico", b =>
                {
                    b.Navigation("TaxasDaLocacao");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.VeiculoModule.Veiculo", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCNPJModule.ClienteCNPJ", b =>
                {
                    b.Navigation("Condutores");
                });

            modelBuilder.Entity("LocadoraDeVeiculos.Dominio.ClienteModule.ClienteCPFModule.ClienteCPF", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
